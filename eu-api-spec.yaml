openapi: 3.0.0
info:
  title: Hyundai EU CCAPI
  version: 1.0.0
servers:
  - url: https://prd.eu-ccapi.hyundai.com:8080/api/v1
paths:

  /v1/spa/notifications/register:
    post:
      operationId: CreatePushNotificationsDevice
      summary: Register for a new push notifications receiver
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - pushType
                - pushRegId
                - uuid
              properties:
                pushType:
                  description: Which type of push notifications (GCN or APNS)
                  type: string
                pushRegId:
                  type: string
                uuid:
                  type: string
      responses:
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushNotificationsDeviceResponse'
        default:
          description: Failed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/spa/vehicles:
    get:
      operationId: ListVehicles
      summary: List the vehicles registered on the account
      responses:
        "200":
          description: Common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehiclesListResponse'
        default:
          description: Failed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/spa/vehicles/{vehicleId}/status:
    get:
      operationId: GetCurrentVehicleStatus
      summary: Force an update and get the current vehicle status
      parameters:
        - name: vehicleId
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentVehicleStatusResponse'
        default:
          description: Failed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/spa/vehicles/{vehicleId}/status/latest:
    get:
      operationId: GetLastVehicleStatus
      summary: Returns the last cached vehicle state and location.
      parameters:
        - name: vehicleId
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LastVehicleStatusResponse'
        default:
          description: Failed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/spa/vehicles/{vehicleId}/location:
    get:
      operationId: GetCurrentVehicleLocation
      summary: Retrieve the current vehicle location
      parameters:
        - name: vehicleId
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentVehicleLocationResponse'
        default:
          description: Failed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/spa/vehicles/{vehicleId}/tripinfo:
    post:
      operationId: QueryVehicleTripInfo
      summary: Retrieve the recorded trip information for the vehicle
      parameters:
        - name: vehicleId
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tripPeriodType
              properties:
                # TODO: can we make this polymorphic?
                tripPeriodType:
                  description: Which period to query, 0 == monthly, 1 == daily
                  type: integer
                setTripMonth:
                  type: string
                setTripDay:
                  type: string
      responses:
        "200":
          description: Common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTripInfoResponse'
        default:
          description: Failed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/spa/vehicles/{vehicleId}/drvhistory:
    post:
      operationId: QueryVehicleDrivingHistory
      summary: Retrieve the recorded driving history
      parameters:
        - name: vehicleId
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - periodTarget
              properties:
                # TODO: can we make this polymorphic?
                periodTarget:
                  description: Which period to query, 0 == 30 days, 1 == all time
                  type: integer
      responses:
        "200":
          description: Common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleDrivingHistoryResponse'
        default:
          description: Failed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ErrorResponse:
      type: object
      required:
        - retCode
        - resCode
        - resMsg
        - msgId
      properties:
        retCode:
          description: F for failure.
          type: string
          example: F
        resCode:
          description: An error code.
          type: string
          example: 40000
        resMsg:
          description: An error message for the failure.
          type: string
          example: An error occurred
        msgId:
          description: A message id for this response.
          type: string
          example: 01234567-89ab-cdef-0123-456789abcdef

    PushNotificationsDeviceResponse:
      type: object
      required:
        - retCode
        - resCode
        - resMsg
        - msgId
      properties:
        retCode:
          type: string
        resCode:
          type: string
        resMsg:
          type: object
          required:
            - deviceId
          properties:
            deviceId:
              description: The generated device id to use in future requests.
              type: string
              format: uuid
              example: 01234567-abcd-ef01-2345-6789abcdef
        msgId:
          type: string

    VehiclesListResponse:
      type: object
      required:
        - retCode
        - resCode
        - resMsg
        - msgId
      properties:
        retCode:
          type: string
        resCode:
          type: string
        resMsg:
          type: object
          required:
            - vehicles
          properties:
            vehicles:
              description: The list of vehicles accessible on this account.
              type: array
              items:
                $ref: '#/components/schemas/VehiclesListResponseVehicle'
              example: []
        msgId:
          type: string

    VehiclesListResponseVehicle:
      type: object
      required:
        - vin
        - vehicleId
        - vehicleName
        - type
        - nickname
        - year
      properties:
        vin:
          description: The VIN number of the vehicle.
          type: string
          example: ABCDEF01234567890
        vehicleId:
          description: The UUID of the vehicle.
          type: string
          format: uuid
          example: 01234567-abcd-ef01-2345-6789abcdef
        vehicleName:
          description: The model of the vehicle.
          type: string
          example: IONIQ 5
        type:
          description: The vehicle type. EV, GN, PHEV, HV.
          type: string
          example: EV
        tmuNum:
          description: Unknown.
          type: string
          example: "-"
        nickname:
          description: A nickname assigned to the vehicle in the account.
          type: string
          example: Ioniq 5
        year:
          description: The model year of the vehicle.
          type: string
          example: 2023
        master:
          description: Unconfirmed, presumably indicates whether this account is the 'master' account.
          type: boolean
          example: true
        carShare:
          description: Unconfirmed, presumably indicates whether this vehicle is shared with other accounts.
          type: integer
          example: 1
        regDate:
          description: Date the vehicle was registered with Hyundai/Bluelink.
          type: string
          example: "2023-12-12 23:59:59.123"
        detailInfo:
          type: object
          properties:
            inColor:
              description: Interior color code of the vehicle.
              type: string
              example: NNB
            outColor:
              description: Exterior color code of the vehicle.
              type: string
              example: W3T
            saleCarmdlCd:
              description: Unknown.
              type: string
              example: GI
            bodyType:
              description: Unknown.
              type: string
              example: "2"
            saleCarmdlEnNm:
              description: Unconfirmed. A model name.
              type: string
              example: "IONIQ 5"
        protocolType:
          description: Unknown.
          type: integer
          example: 0
        ccuCCS2ProtocolSupport:
          description: Unknown.
          type: integer
          example: 0

    LastVehicleStatusResponse:
      type: object
      required:
        - retCode
        - resCode
        - resMsg
        - msgId
      properties:
        retCode:
          type: string
        resCode:
          type: string
        resMsg:
          type: object
          required:
            - vehicleStatusInfo
          properties:
            vehicleStatusInfo:
              type: object
              required:
                - odometer
                - vehicleLocation
                - vehicleStatus
              properties:
                odometer:
                  $ref: '#/components/schemas/StandardDistance'
                vehicleLocation:
                  $ref: '#/components/schemas/VehicleLocationGps'
                vehicleStatus:
                  $ref: '#/components/schemas/VehicleStatus'
        msgId:
          type: string

    StandardDistance:
      description: A standard distance or range measurement.
      type: object
      required:
        - unit
        - value
      properties:
        unit:
          description: The unit of distance. 0 == km. 1 == miles.
          type: integer
          example: 1
        value:
          description: The scalar distance.
          type: number
          example: 1000

    CurrentVehicleLocationResponse:
      type: object
      required:
        - retCode
        - resCode
        - resMsg
        - msgId
      properties:
        retCode:
          type: string
        resCode:
          type: string
        resMsg:
          type: object
          required:
            - drvDistance
            - gpsDetail
          properties:
            drvDistance:
              type: object
              properties:
                type:
                  description: Unknown.
                  type: integer
                  example: 2
                rangeByFuel:
                  type: object
                  required:
                    - totalAvailableRange
                  properties:
                    evModeRange:
                      $ref: '#/components/schemas/StandardDistance'
                    totalAvailableRange:
                      $ref: '#/components/schemas/StandardDistance'
            gpsDetail:
              $ref: '#/components/schemas/VehicleLocationGps'
        msgId:
          type: string

    VehicleLocationGps:
      description: A GPS location capture. This could be the current state or the last known state.
      type: object
      required:
        - accuracy
        - coord
        - time
      properties:
        accuracy:
          type: object
          required:
            - hdop
            - pdop
          properties:
            hdop:
              type: integer
              example: 10
            pdop:
              type: integer
              example: 10
        coord:
          type: object
          required:
            - lat
            - lon
          properties:
            alt:
              description: Unconfirmed. Altitude in meters if known.
              type: integer
              example: 0
            lat:
              description: GPS Latitude in degrees
              type: number
              example: 23.000000
            lon:
              description: GPS Longitude in degrees
              type: number
              example: -5.000000
            type:
              description: Unknown.
              type: integer
              example: 0
        head:
          description: Compass heading in degrees.
          type: integer
          example: 180
        speed:
          type: object
          required:
            - unit
            - value
          properties:
            unit:
              description: The distance unit per hour. 1 == miles.
              type: integer
              example: 1
            value:
              description: The speed value.
              type: integer
              example: 0
        time:
          description: Timestamp of the location capture.
          type: string
          example: 20231231235959

    CurrentVehicleStatusResponse:
      type: object
      required:
        - retCode
        - resCode
        - resMsg
        - msgId
      properties:
        retCode:
          type: string
        resCode:
          type: string
        resMsg:
          $ref: '#/components/schemas/VehicleStatus'
        msgId:
          type: string

    VehicleStatus:
      type: object

    VehicleTripInfoResponse:
      type: object
      required:
        - retCode
        - resCode
        - resMsg
        - msgId
      properties:
        retCode:
          type: string
        resCode:
          type: string
        resMsg:
          type: object
        msgId:
          type: string

    VehicleDrivingHistoryResponse:
      type: object
      required:
        - retCode
        - resCode
        - resMsg
        - msgId
      properties:
        retCode:
          type: string
        resCode:
          type: string
        resMsg:
          type: object
        msgId:
          type: string
